{
  "edges": [
    {
      "caller": "app.api.routers.browse_user_routes.build_tree_from_s3_keys",
      "callee": "app.api.routers.browse_user_routes.add_path_to_tree"
    },
    {
      "caller": "app.api.routers.browse_user_routes.collect_routes",
      "callee": "app.api.routers.browse_user_routes.collect_routes"
    },
    {
      "caller": "app.api.routers.browse_user_routes.collect_routes",
      "callee": "app.api.routers.browse_user_routes.is_timestamp_folder"
    },
    {
      "caller": "app.api.routers.browse_user_routes.dict_to_node_array",
      "callee": "app.api.routers.browse_user_routes.dict_to_node_array"
    },
    {
      "caller": "app.api.routers.browse_user_routes.dict_to_node_array",
      "callee": "app.api.routers.browse_user_routes.is_timestamp_folder"
    },
    {
      "caller": "app.api.routers.browse_user_routes.dict_to_node_array",
      "callee": "app.api.routers.browse_user_routes.try_load_coordinates"
    },
    {
      "caller": "app.api.routers.browse_user_routes.find_area_node",
      "callee": "app.api.routers.browse_user_routes.find_area_node"
    },
    {
      "caller": "app.api.routers.browse_user_routes.flatten_coords",
      "callee": "app.api.routers.browse_user_routes.flatten_coords"
    },
    {
      "caller": "app.api.routers.browse_user_routes.get_all_route_coordinates",
      "callee": "app.api.routers.browse_user_routes.flatten_coords"
    },
    {
      "caller": "app.api.routers.browse_user_routes.get_all_route_coordinates",
      "callee": "app.api.routers.browse_user_routes.load_or_build_tree"
    },
    {
      "caller": "app.api.routers.browse_user_routes.get_s3_location_tree",
      "callee": "app.api.routers.browse_user_routes.load_or_build_tree"
    },
    {
      "caller": "app.api.routers.browse_user_routes.list_timestamps",
      "callee": "app.api.routers.browse_user_routes.is_timestamp_folder"
    },
    {
      "caller": "app.api.routers.browse_user_routes.load_or_build_tree",
      "callee": "app.storage.s3.cache_s3_loc_tree.cache_full_location_tree"
    },
    {
      "caller": "app.api.routers.browse_user_routes.routes_under_area",
      "callee": "app.api.routers.browse_user_routes.collect_routes"
    },
    {
      "caller": "app.api.routers.browse_user_routes.routes_under_area",
      "callee": "app.api.routers.browse_user_routes.find_area_node"
    },
    {
      "caller": "app.api.routers.browse_user_routes.routes_under_area",
      "callee": "app.api.routers.browse_user_routes.load_or_build_tree"
    },
    {
      "caller": "app.api.routers.compare._job_runner",
      "callee": "app.transform.transform_skeleton.generate_video"
    },
    {
      "caller": "app.api.routers.compare._job_runner",
      "callee": "app.transform.transform_skeleton.generate_video_multiframe"
    },
    {
      "caller": "app.api.routers.compare._job_runner",
      "callee": "app.video.convert.convert_video_for_browser"
    },
    {
      "caller": "app.api.routers.compare.compare_image",
      "callee": "app.api.routers.compare.parse_color"
    },
    {
      "caller": "app.api.routers.compare.compare_image",
      "callee": "app.jobs.job_manager.submit_job"
    },
    {
      "caller": "app.api.routers.compare.compare_image",
      "callee": "app.storage.s3.load_json_s3.load_pose_data_from_path"
    },
    {
      "caller": "app.api.routers.compare.compare_image",
      "callee": "app.storage.s3.load_json_s3.load_sift_data_from_path"
    },
    {
      "caller": "app.api.routers.compare.compare_image",
      "callee": "app.transform.draw_points.rgb_to_bgr"
    },
    {
      "caller": "app.api.routers.compare.compare_status",
      "callee": "app.jobs.job_manager.get_job"
    },
    {
      "caller": "app.api.routers.map_data.get_map_data",
      "callee": "app.storage.database.route_db_connect.get_connection"
    },
    {
      "caller": "app.api.routers.stream_frames.gen",
      "callee": "app.api.routers.stream_frames._normalize_landmarks"
    },
    {
      "caller": "app.api.routers.stream_frames.gen",
      "callee": "app.transform.draw_points.draw_pose"
    },
    {
      "caller": "app.api.routers.stream_frames.stream_frames",
      "callee": "app.api.routers.stream_frames.gen"
    },
    {
      "caller": "app.jobs.job_manager._runner",
      "callee": "app.jobs.job_manager._now"
    },
    {
      "caller": "app.jobs.job_manager.submit_job",
      "callee": "app.jobs.job_manager._now"
    },
    {
      "caller": "app.jobs.job_manager.update_job_progress",
      "callee": "app.jobs.job_manager._now"
    },
    {
      "caller": "app.storage.s3.cache_s3_loc_tree.cache_full_location_tree",
      "callee": "app.storage.s3.tree_helpers.build_tree_from_s3_keys"
    },
    {
      "caller": "app.storage.s3.cache_s3_loc_tree.cache_full_location_tree",
      "callee": "app.storage.s3.tree_helpers.dict_to_node_array"
    },
    {
      "caller": "app.storage.s3.load_json_s3.load_pose_data_from_path",
      "callee": "app.storage.s3.load_json_s3.download_from_s3"
    },
    {
      "caller": "app.storage.s3.load_json_s3.load_pose_data_from_path",
      "callee": "app.storage.s3.load_json_s3.find_matching_file"
    },
    {
      "caller": "app.storage.s3.load_json_s3.load_sift_data_from_path",
      "callee": "app.storage.s3.load_json_s3.download_from_s3"
    },
    {
      "caller": "app.storage.s3.load_json_s3.load_sift_data_from_path",
      "callee": "app.storage.s3.load_json_s3.find_matching_file"
    },
    {
      "caller": "app.storage.s3.tree_helpers.build_tree_from_s3_keys",
      "callee": "app.storage.s3.tree_helpers.add_path_to_tree"
    },
    {
      "caller": "app.storage.s3.tree_helpers.dict_to_node_array",
      "callee": "app.storage.s3.tree_helpers.dict_to_node_array"
    },
    {
      "caller": "app.storage.s3.tree_helpers.dict_to_node_array",
      "callee": "app.storage.s3.tree_helpers.is_timestamp_folder"
    },
    {
      "caller": "app.transform.draw_points.apply_transform",
      "callee": "app.transform.draw_points.apply_to_point"
    },
    {
      "caller": "app.transform.draw_points.apply_transform",
      "callee": "app.transform.draw_points.validate_transformation"
    },
    {
      "caller": "app.transform.transform_skeleton.convert_video_for_browser",
      "callee": "app.transform.transform_skeleton._do_conversion"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_multiframe_video_frames",
      "callee": "app.transform.draw_points.apply_transform"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_multiframe_video_frames",
      "callee": "app.transform.draw_points.draw_pose"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_multiframe_video_frames",
      "callee": "app.transform.transform_skeleton._interpolate_affine"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_multiframe_video_frames",
      "callee": "app.transform.transform_skeleton.linear_interpolate_pose"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video",
      "callee": "app.storage.s3.load_json_s3.cleanup_local_storage"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video",
      "callee": "app.transform.draw_points.apply_transform"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video",
      "callee": "app.transform.transform_skeleton.generate_video_frames"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video",
      "callee": "app.transform.transform_skeleton.validate_affine_transform"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video",
      "callee": "app.vision.detect_img_sift.detect_sift"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video",
      "callee": "app.vision.match_features.compute_affine_transform"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video",
      "callee": "app.vision.match_features.match_features"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video_frames",
      "callee": "app.jobs.job_manager.update_job_progress"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video_frames",
      "callee": "app.transform.draw_points.draw_pose"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video_frames",
      "callee": "app.transform.transform_skeleton.linear_interpolate_pose"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video_multiframe",
      "callee": "app.storage.s3.load_json_s3.cleanup_local_storage"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video_multiframe",
      "callee": "app.transform.transform_skeleton.generate_multiframe_video_frames"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video_multiframe",
      "callee": "app.vision.detect_img_sift.detect_sift"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video_multiframe",
      "callee": "app.vision.match_features.compute_affine_transform"
    },
    {
      "caller": "app.transform.transform_skeleton.generate_video_multiframe",
      "callee": "app.vision.match_features.match_features"
    },
    {
      "caller": "app.transform.transform_skeleton.linear_interpolate_pose",
      "callee": "app.transform.transform_skeleton.linear_interpolate_pose"
    },
    {
      "caller": "app.video.convert.convert_video_for_browser",
      "callee": "app.video.convert._do_conversion"
    },
    {
      "caller": "app.video.write.write_pose_video",
      "callee": "app.transform.draw_points.draw_pose"
    },
    {
      "caller": "app.vision.match_features.compute_affine_transform",
      "callee": "app.vision.match_features.validate_transformation"
    }
  ]
}